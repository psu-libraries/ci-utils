#!/bin/bash
# updates argocd Appication with tag, submits a pr to the config repo
set -u 

usage() {
    echo "Usage: $0 <filename>"
    echo "Updates ArgoCD Application with tag and submits a PR to the config repo."
    echo
    echo "Arguments:"
    echo "  filename    Path to the ArgoCD Application YAML file to update."
    echo
    echo "Environment Variables:"
    echo "  TO_TAG      Optional. The tag to set. Defaults to CIRCLE_TAG if not set."
    exit 1
}

if [[ $# -eq 0 || "$1" == "--help" ]]; then
    usage
fi

filename=$1

if [[ ! -f "$filename" ]]; then
    echo "Error: File '$filename' does not exist."
    exit 1
fi

# Determine the new tag to be used, fallback to CIRCLE_TAG if TO_TAG is not set
TAG_NEW="${TO_TAG:-$CIRCLE_TAG}"

# Define the repository and branch name for the config repo edits
branch_name="$CIRCLE_PROJECT_REPONAME-${TAG_NEW}"

# Tag used for the image itself; typically the release tag or fallback to SHA
image_tag="${TAG_NEW:-${CIRCLE_SHA1}}"

# Git source reference for the deployment (used in container image annotations)
src_ref="${CIRCLE_SHA1}"
echo "Preparing git configuration for user: ${GITHUB_USER}"
git config --global user.email "${GITHUB_USER}@psu.edu"
git config --global user.name "${GITHUB_USER}"

echo "Preparing the local config repository: ${CONFIG_REPO}"
project=$(echo "${CONFIG_REPO}" | sed 's:git@::g' | sed 's/com:/com\//g')
git remote set-url origin "https://${GITHUB_USER}:${GITHUB_TOKEN}@$project"
git checkout -b "$branch_name"

echo "Preparing manifest to release tag: ${TAG_NEW}"
# Convert 'values: |' multiline syntax to 'values:' block for compatibility with yq
sed -i -e 's/^\([[:space:]]*\)values: |/\1values:/g' "$filename"

# Set Helm image tag and annotation to the new tag
# Update the srcRef annotation to reference the commit SHA
yq -i ".metadata.annotations.srcRef=\"${src_ref}\"" "$filename"
yq -i ".spec.source.helm.values.image.tag=\"${image_tag}\"" "$filename"

# Revert 'values:' block back to multiline 'values: |' after yq edits
sed -i -e 's/[[:space:]]values:/ values: |/g' "$filename"

if git diff --quiet "$filename"; then
    echo "No changes detected in $filename, skipping commit and PR creation."
    exit 0
fi

git add "$filename"
git commit -m "release ${TAG_NEW} for $CIRCLE_PROJECT_REPONAME"
git push -u origin "$branch_name"

gh pr create \
    --title "release ${TAG_NEW} for $CIRCLE_PROJECT_REPONAME" \
    --body "release ${TAG_NEW} for $CIRCLE_PROJECT_REPONAME" \
    --base main
